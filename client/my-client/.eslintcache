[{"D:\\GitHub Repositories\\ReactJS-NodeJS-MySQL\\client\\my-client\\src\\index.js":"1","D:\\GitHub Repositories\\ReactJS-NodeJS-MySQL\\client\\my-client\\src\\App.js":"2"},{"size":214,"mtime":1611315138139,"results":"3","hashOfConfig":"4"},{"size":8742,"mtime":1612168678888,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"1vpz2r1",{"filePath":"9","messages":"10","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"D:\\GitHub Repositories\\ReactJS-NodeJS-MySQL\\client\\my-client\\src\\index.js",[],["12","13"],"D:\\GitHub Repositories\\ReactJS-NodeJS-MySQL\\client\\my-client\\src\\App.js",["14","15","16","17","18","19","20","21","22","23","24","25","26"],"import React, { useState, useEffect, createRef } from 'react';\n\nimport axios from 'axios';\n\nconst request = require('request');\nconst OAuth = require('oauth-1.0a');\nconst crypto = require('crypto');\n\n// Initialize\n\nconst App = () => {\n\tconst [username, setUsername] = useState('');\n\tconst [message, setMessage] = useState('');\n\tconst [newmessage, setNewMessage] = useState('');\n\tconst [messages, setMessages] = useState([]);\n\n\t// let textInput = React.createRef();\n\n\t// const onUsernameInputHandler = (event) => {\n\t// \tconst username = event.target.value;\n\t// \tsetUsername(username);\n\t// };\n\t// const onMessageInputHandler = (event) => {\n\t// \tconst message = event.target.value;\n\t// \tsetMessage(message);\n\t// };\n\n\t// const onNewMessageInputHandler = (event) => {\n\t// \tsetNewMessage(event.target.value);\n\t// };\n\n\t// const submitHandler = (event) => {\n\t// \tevent.preventDefault();\n\t// \tconsole.log(username, message);\n\t// \taxios\n\t// \t\t.post('http://localhost:3002/api/insert', {\n\t// \t\t\tusername: username,\n\t// \t\t\tmessage: message,\n\t// \t\t})\n\t// \t\t.then((result) => {\n\t// \t\t\tconsole.log(result.data);\n\t// \t\t\tconsole.log(messages);\n\t// \t\t\tsetMessages([\n\t// \t\t\t\t...messages,\n\t// \t\t\t\t{\n\t// \t\t\t\t\tid: result.data.id,\n\t// \t\t\t\t\tusername: result.data.username,\n\t// \t\t\t\t\tusermessage: result.data.usermessage,\n\t// \t\t\t\t},\n\t// \t\t\t]);\n\t// \t\t\tconsole.log(messages);\n\t// \t\t});\n\t// \tconsole.log('Cliked Submit');\n\t// };\n\n\t// const deleteMessageHandler = (id) => {\n\t// \tconsole.log('Request delete ID: ', id);\n\t// \taxios\n\t// \t\t.delete('http://localhost:3002/api/delete', { data: { id: id } })\n\t// \t\t.then((result) => {\n\t// \t\t\tconsole.log(result.data);\n\t// \t\t})\n\t// \t\t.catch((error) => {\n\t// \t\t\tconsole.log(error);\n\t// \t\t});\n\n\t// \tsetMessages((prevMessages) => {\n\t// \t\treturn prevMessages.filter((message) => {\n\t// \t\t\treturn message.id !== id;\n\t// \t\t});\n\t// \t});\n\t// };\n\n\t// const updateMessageHandler = (id) => {\n\t// \tconsole.log('New Message: ', newmessage);\n\t// \tconsole.log('Request update ID: ', id);\n\t// \taxios\n\t// \t\t.put('http://localhost:3002/api/update', {\n\t// \t\t\tid: id,\n\t// \t\t\tmessage: newmessage,\n\t// \t\t})\n\t// \t\t.then((result) => {\n\t// \t\t\t// console.log('Update Result: ', result);\n\t// \t\t\tsetMessages((prevMessages) => {\n\t// \t\t\t\tconsole.log('PrevMessages ', prevMessages);\n\t// \t\t\t\tconst arr = prevMessages.map((message) => {\n\t// \t\t\t\t\tif (message.id === id) {\n\t// \t\t\t\t\t\treturn {\n\t// \t\t\t\t\t\t\tid: message.id,\n\t// \t\t\t\t\t\t\tusername: message.username,\n\t// \t\t\t\t\t\t\tusermessage: newmessage,\n\t// \t\t\t\t\t\t};\n\t// \t\t\t\t\t}\n\t// \t\t\t\t\treturn message;\n\t// \t\t\t\t});\n\t// \t\t\t\t//console.log('Returned: ', arr);\n\t// \t\t\t\treturn [...arr];\n\t// \t\t\t});\n\t// \t\t})\n\t// \t\t.catch((error) => {\n\t// \t\t\tconsole.log(error);\n\t// \t\t});\n\t// };\n\n\t// useEffect(() => {\n\t// \taxios\n\t// \t\t.get('http://localhost:3002/messages')\n\t// \t\t.then((result) => {\n\t// \t\t\tconst data = result.data;\n\n\t// \t\t\tsetMessages((messages) => [...messages, ...data]);\n\t// \t\t})\n\t// \t\t.catch((error) => {\n\t// \t\t\tconsole.log(error);\n\t// \t\t});\n\t// }, []);\n\n\t// console.log('Messages', messages);\n\tconst onClickHandler = () => {\n\t\tconst url = 'http://localhost/storehouse/wp-json/wc/v3/products';\n\n\t\tconst consumer_key = 'ck_c537326e36602fb5c59174e2b06390242bde4362';\n\n\t\tconst consumer_secret = 'cs_9fec25e487fcb3651b545adf122d28f956de2a65';\n\n\t\tconst oauth = OAuth({\n\t\t\tconsumer: {\n\t\t\t\tkey: 'ck_c537326e36602fb5c59174e2b06390242bde4362',\n\t\t\t\tsecret: 'cs_9fec25e487fcb3651b545adf122d28f956de2a65',\n\t\t\t},\n\t\t\tsignature_method: 'HMAC-SHA1',\n\t\t\thash_function(base_string, key) {\n\t\t\t\treturn crypto\n\t\t\t\t\t.createHmac('sha1', key)\n\t\t\t\t\t.update(base_string)\n\t\t\t\t\t.digest('base64');\n\t\t\t},\n\t\t});\n\n\t\t// const request_data = {\n\t\t// \turl:\n\t\t// \t\t'https://api.twitter.com/1/statuses/update.json?include_entities=true',\n\t\t// \tmethod: 'POST',\n\t\t// \tdata: { status: 'Hello Ladies + Gentlemen, a signed OAuth request!' },\n\t\t// };\n\t\tconst request_data = {\n\t\t\turl: url,\n\t\t\tmethod: 'GET',\n\t\t\t// data: { status: 'Hello Ladies + Gentlemen, a signed OAuth request!' },\n\t\t};\n\t\tconst token = {\n\t\t\tkey: 'ck_c537326e36602fb5c59174e2b06390242bde4362',\n\t\t\tsecret: 'cs_9fec25e487fcb3651b545adf122d28f956de2a65',\n\t\t};\n\t\t// request(\n\t\t// \t{\n\t\t// \t\turl: request_data.url,\n\t\t// \t\tmethod: request_data.method,\n\t\t// \t\tform: oauth.authorize(request_data, token),\n\t\t// \t},\n\t\t// \tfunction (error, response, body) {\n\t\t// \t\tconsole.log(error);\n\t\t// \t\tconsole.log(response);\n\t\t// \t\tconsole.log(body);\n\t\t// \t}\n\t\t// );\n\n\t\taxios\n\t\t\t.get('http://localhost/storehouse/wp-json/wc/v3/products', {\n\t\t\t\theaders: {\n\t\t\t\t\theaders: oauth.toHeader(oauth.authorize(request_data, token)),\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res.data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\n\t\t// fetch(url, {\n\t\t// \tmethod: 'GET',\n\t\t// \theaders: oauth.toHeader(),\n\t\t// })\n\t\t// \t.then((responseJson) => {\n\t\t// \t\tconsole.log(responseJson);\n\t\t// \t})\n\t\t// \t.catch((error) => console.log(error));\n\n\t\t// var obj = {\n\t\t// \tmethod: 'GET',\n\t\t// \theaders: {\n\t\t// \t\tauthorization:\n\t\t// \t\t\t'OAuth oauth_consumer_key=\"ck_4d20b595462f110d6f21ec3d651e2fc6658d206d\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1611900591\",oauth_nonce=\"iGTPOKeoIwI\",oauth_version=\"1.0\",oauth_signature=\"9pHOa%2BLHkv1z7PdmOLKMWjGNV6Y%3D\"',\n\t\t// \t\t'user-agent': 'PostmanRuntime/7.26.10',\n\t\t// \t\taccept: '*/*',\n\t\t// \t\t'postman-token': 'f4ca17c1-d3ac-4259-b257-39ec03ac0a81',\n\t\t// \t\thost: 'localhost:3002',\n\t\t// \t\t'accept-encoding': 'gzip, deflate, br',\n\t\t// \t\tconnection: 'keep-alive',\n\t\t// \t},\n\n\t\t// \tmode: 'cors', // no-cors, *cors, same-origin\n\t\t// \tcache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n\t\t// \tcredentials: 'same-origin', // include, *same-origin, omit\n\t\t// };\n\t\t// fetch(url, obj)\n\t\t// \t.then((responseJson) => {\n\t\t// \t\tconst items = JSON.parse(responseJson._bodyInit);\n\t\t// \t\tconsole.lot(items);\n\t\t// \t})\n\t\t// \t.catch((error) => console.log(error));\n\n\t\t// fetch(url, {\n\t\t// \tmethod: 'GET',\n\t\t// \tbody:\n\t\t// \t\t'grant_type=client_credentials&client_id=' +\n\t\t// \t\tkey +\n\t\t// \t\t'&client_secret=' +\n\t\t// \t\tsecret,\n\t\t// \theaders: {\n\t\t// \t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t// \t},\n\t\t// });\n\n\t\t// request.get(\n\t\t// \t'https://api.twitter.com/1.1/users/show.json',\n\t\t// \t{\n\t\t// \t\toauth: {\n\t\t// \t\t\tconsumer_key: '...',\n\t\t// \t\t\tconsumer_secret: '...',\n\t\t// \t\t\ttoken: '...',\n\t\t// \t\t\ttoken_secret: '...',\n\t\t// \t\t},\n\t\t// \t\tqs: { user_id: '...' }, // or screen_name\n\t\t// \t},\n\t\t// \tfunction (err, res, body) {}\n\t\t// );\n\n\t\t// \t\tfetch(url, {\n\t\t// \t\t\tmethod: 'GET',\n\t\t// \t\t\t// withCredentials: true,\n\t\t// \t\t\t// credentials: 'include',\n\t\t// \t\t\theaders: {\n\t\t// \t\t\t\t// Authorization: bearer,\n\t\t// \t\t\t\t// 'X-FP-API-KEY': 'iphone', //it can be iPhone or your any other attribute\n\t\t// \t\t\t\t// 'Content-Type': 'application/json',\n\t\t// \t\t\t\tContent-Type: application,\n\n\t\t// Authorization: OAuth,\n\n\t\t//   oauth_consumer_key=consumer_key,\n\n\t\t//   oauth_signature_method=\"HMAC-SHA1\",\n\n\t\t//   oauth_callback=[Client Redirect URI],\n\n\t\t//   oauth_timestamp=[Timestamp],\n\n\t\t//   oauth_nonce=[Nonce],\n\n\t\t//   oauth_signature=[Signature]\n\t\t// \t\t\t},\n\t\t// \t\t})\n\t\t// \t\t\t.then((responseJson) => {\n\t\t// \t\t\t\tvar items = JSON.parse(responseJson._bodyInit);\n\t\t// \t\t\t})\n\t\t// \t\t\t.catch((error) =>\n\t\t// \t\t\t\tthis.setState({\n\t\t// \t\t\t\t\tisLoading: false,\n\t\t// \t\t\t\t\tmessage: 'Something bad happened ' + error,\n\t\t// \t\t\t\t})\n\t\t// \t\t\t);\n\t};\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<button type=\"button\" onClick={onClickHandler}>\n\t\t\t\tRequest\n\t\t\t</button>\n\t\t\t{/* <div>\n\t\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t\t<label htmlFor=\"name\">Name:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\tonChange={onUsernameInputHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"name\">Message:</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\tonChange={onMessageInputHandler}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type=\"submit\">Submit</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t{messages.map((value) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>Username: {value.username}</h3>\n\t\t\t\t\t\t\t<p>Message:{value.usermessage}</p>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tdeleteMessageHandler(value.id);\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tDelete {value.id}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"newmessage\"\n\t\t\t\t\t\t\t\t// onChange={onNewMessageInputHandler}\n\t\t\t\t\t\t\t\t// value={newmessage}\n\t\t\t\t\t\t\t\t// onChange={(e) => {\n\t\t\t\t\t\t\t\t// \tonNewMessageInputHandler(e, value.id);\n\t\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\t\t// onChange={onNewMessageInputHandler.bind(\n\t\t\t\t\t\t\t\t// \tthis,\n\t\t\t\t\t\t\t\t// \tvalue.id\n\t\t\t\t\t\t\t\t// )}\n\n\t\t\t\t\t\t\t\t// onChange={}\n\t\t\t\t\t\t\t\tref={textInput}\n\t\t\t\t\t\t\t\tonChange={onNewMessageInputHandler}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tupdateMessageHandler(value.id);\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tUpdate {value.id}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div> */}\n\t\t</React.Fragment>\n\t);\n};\n\nexport default App;\n",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":27,"nodeType":"33","messageId":"34","endLine":1,"endColumn":36},{"ruleId":"31","severity":1,"message":"35","line":1,"column":38,"nodeType":"33","messageId":"34","endLine":1,"endColumn":47},{"ruleId":"31","severity":1,"message":"36","line":5,"column":7,"nodeType":"33","messageId":"34","endLine":5,"endColumn":14},{"ruleId":"31","severity":1,"message":"37","line":12,"column":9,"nodeType":"33","messageId":"34","endLine":12,"endColumn":17},{"ruleId":"31","severity":1,"message":"38","line":12,"column":19,"nodeType":"33","messageId":"34","endLine":12,"endColumn":30},{"ruleId":"31","severity":1,"message":"39","line":13,"column":9,"nodeType":"33","messageId":"34","endLine":13,"endColumn":16},{"ruleId":"31","severity":1,"message":"40","line":13,"column":18,"nodeType":"33","messageId":"34","endLine":13,"endColumn":28},{"ruleId":"31","severity":1,"message":"41","line":14,"column":9,"nodeType":"33","messageId":"34","endLine":14,"endColumn":19},{"ruleId":"31","severity":1,"message":"42","line":14,"column":21,"nodeType":"33","messageId":"34","endLine":14,"endColumn":34},{"ruleId":"31","severity":1,"message":"43","line":15,"column":9,"nodeType":"33","messageId":"34","endLine":15,"endColumn":17},{"ruleId":"31","severity":1,"message":"44","line":15,"column":19,"nodeType":"33","messageId":"34","endLine":15,"endColumn":30},{"ruleId":"31","severity":1,"message":"45","line":122,"column":9,"nodeType":"33","messageId":"34","endLine":122,"endColumn":21},{"ruleId":"31","severity":1,"message":"46","line":124,"column":9,"nodeType":"33","messageId":"34","endLine":124,"endColumn":24},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'createRef' is defined but never used.","'request' is assigned a value but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'newmessage' is assigned a value but never used.","'setNewMessage' is assigned a value but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'consumer_key' is assigned a value but never used.","'consumer_secret' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]